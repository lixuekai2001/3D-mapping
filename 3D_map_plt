import numpy as np
import os
import pandas as pd
import matplotlib.pyplot as plt
from scipy.interpolate import interp2d
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.colors import Normalize
from matplotlib.cm import ScalarMappable
from mpl_toolkits.mplot3d.art3d import Poly3DCollection
import warnings

# Suppress all warnings
warnings.filterwarnings('ignore')

# Creating a cube with moderately rough surfaces using the complete executable code provided earlier
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
grid=4
mag_times = 4
# Define the dimensions of the cube with a moderately rough surface
def plot_moderate_rough_face(ax, dir, offset):
    d = np.linspace(0, 1, grid)  # More points for a finer detail# 生成更多的点以获得更精细的细节
    X, Y = np.meshgrid(d, d)  # Create a meshgrid
    # Generate a moderate roughness pattern # 生成中等粗糙度模式
    Z = 0.01 * np.random.randn(grid, grid)  # Reduced random noise for roughness # 减少随机噪声以获得粗糙度

    # 在每个面上插入更多点以确保连续性
    interp_func = interp2d(d, d, Z, kind='cubic')
    d_dense = np.linspace(0, 1, mag_times * grid)
    X, Y = np.meshgrid(d_dense, d_dense)
    Z = interp_func(d_dense, d_dense)
    
    # 设置颜色范围
    norm = Normalize(vmin=Z.min(), vmax=Z.max())
    if dir == 'z':
        Z += offset
        facecolors=plt.cm.viridis(norm(Z-offset))
    elif dir == 'y':
        X, Z = Z + offset, X
        facecolors=plt.cm.viridis(norm(X-offset))
    elif dir == 'x':
        Y, Z = Z + offset, Y
        facecolors=plt.cm.viridis(norm(Y-offset))

    ax.plot_surface(X, Y, Z, alpha=1, edgecolor='none', cmap='viridis',facecolors=facecolors)
    return norm

# Plot each face of the cube with moderate rough surface
norm = plot_moderate_rough_face(ax, 'z', 0)  # Bottom face
plot_moderate_rough_face(ax, 'z', 1)  # Top face
plot_moderate_rough_face(ax, 'y', 0)  # Front face
plot_moderate_rough_face(ax, 'y', 1)  # Back face
plot_moderate_rough_face(ax, 'x', 0)  # Left face
plot_moderate_rough_face(ax, 'x', 1)  # Right face

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')

mappable = ScalarMappable(norm=norm, cmap='viridis')
mappable.set_array([])  # 不需要数据，因为颜色条由norm和cmap控制
cbar = plt.colorbar(mappable, ax=ax, shrink=0.5, aspect=30,pad = 0.12)
cbar.set_label("Normalized Young's Modulus")

# Set the limits for the axes
ax.set_xlim([0, 1])
ax.set_ylim([0, 1])
ax.set_zlim([0, 1])

ax.grid(False)
# Hide X and Y axes label marks
# ax.xaxis.set_tick_params(labelbottom=False)
# ax.yaxis.set_tick_params(labelleft=False)

# Hide X and Y axes tick marks
ax.set_xticks([])
ax.set_yticks([])
ax.set_zticks([])

# Set the angle of the view
ax.view_init(30+180, 225)

plt.show()
